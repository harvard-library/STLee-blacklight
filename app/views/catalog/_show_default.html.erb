<% doc_presenter = show_presenter(document) %>
<%# default partial to display solr document fields in catalog show view -%>
<%=generate_tour_modal_html document[:delivery_service]%>
<div class="row">
<%=generate_tour_modal_link document[:delivery_service]%>
  <div class="col-lg-8">
    <div id="details" class="content active record-details">
      <dl class="row">
        <% document_show_fields(document).each do |field_name, field| -%>
          <% if should_render_show_field? document, field %>
            <dt class="blacklight-<%= field_name.parameterize %>"><%= render_document_show_field_label document, field: field_name %></dt>
            <dd class="blacklight-<%= field_name.parameterize %>"><%=raw CGI.unescapeHTML doc_presenter.field_value field_name %></dd>
          <% end -%>
        <% end -%>
      </dl>
    </div> 
  </div>
  <div class="col-lg-4">
    <div id="tools" class="record-tools">
      <h2 class="clearfix">Tools &amp; Related Links</h2>
        <div id="no-dl-button">Download currently unavailable.<br>Check back soon.</div>
            <%if document[:delivery_service] == 'ids' or document[:delivery_service] == 'pds'%>
            <div class="btn-group" id='dl-dropdown'>
              <button type="button" class="btn btn-dark dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                 Download This Item <span class="caret"></span>
               </button>
               <%if document[:delivery_service] == 'ids'%>
               <ul class="dropdown-menu">
                  <%image_base_url = 'https://ids.lib.harvard.edu/ids/iiif/' + document[:drs_file_id]
                  json_answer = retrieve_still_image_json_metadata(image_base_url+ '/info.json')
                  if json_answer
                    size_and_labels = [[300, "Small: %d x %d px"],[800, "Medium: %d x %d px"],
                                        [1200, "Large: %d x %d px"],[2400, "X-Large: %d x %d px"]]
                    max_width = json_answer['maxWidth'].to_i
                    max_height = json_answer['maxHeight'].to_i
                    ratio = json_answer['height']/json_answer['width'].to_f
                    download_url = image_base_url + '/full/%d,/0/default.jpg?download&caption'
                    for i in 0..size_and_labels.length-1 do
                      size_elem = size_and_labels[i]
                      if size_elem[0] <= max_width
                      %>
                        <li>
                          <a href="<%= download_url % size_elem[0] %>"><%= size_elem[1] % [size_elem[0], (ratio*(size_elem[0].to_f)).floor] %>
                          </a>
                        </li>
                      <%elsif i != size_and_labels.length-1 and max_width < size_and_labels[i+1][0]%>
                        <li>
                          <a href="<%= download_url % size_elem[0] %>"><%= size_elem[1] % [max_width, (ratio*(max_width.to_f)).floor] %>
                          </a>
                        </li>
                        <%break 'break'
                      end
                    end
                  end%>
                </ul>
                <%
                else
                  #in the case of a pds content, we need a different behavior for the download button.
                  manifest_url = 'https://iiif.lib.harvard.edu/manifests/drs:'+document[:drs_file_id]
                  manifest_json = retrieve_still_image_json_metadata manifest_url
                  if manifest_json
                    number_of_pages = manifest_json['structures'][0]['canvases'].length
                  else#below is an easy way to "remove" the download button if there is no manifest retrieved.%>
                    <style type="text/css">
                      #dl-dropdown{
                        display:none;
                      }
                      #no-dl-button{
                        display:block;
                      }
                    </style>
                  <%
                  end
                %>
                <div class="dropdown-menu sequence-options">
                  <div id="incorrect_page_range" style = "display:none" value='<%=number_of_pages%>'>
                    Please select a page sequence range between 1-<%=number_of_pages%> pages.
                  </div>
                  From seq <%= text_field :range, :start, size: "5" ,:value => 1 %> to seq <%= text_field :range, :end, size: "5", :value => number_of_pages%>
                  <div id='email_text_form' style = "display:none">
                    Please enter your email, we will send you a download link once your pages are ready to download:
                    <%= text_field :email, :field%>
                  </div>
                  <div id='invalid_email_text' style="display:none">
                    The email you entered was not valid.
                  </div>

                  <script>
                    // this prevents the dropdown menu for pds content from closing when clicking something within it.
                    $('#dl-dropdown .dropdown-menu').on({
                      "click":function(e){
                          e.stopPropagation();
                        }
                    });

                    function clearValuesHideText(maximum_page){
                      document.getElementById('email_field').value = '';
                      document.getElementById("range_start").value = '1';
                      document.getElementById("range_end").value = maximum_page;
                      document.getElementById("incorrect_page_range").style.display = "none";
                      document.getElementById('email_text_form').style.display = "none";
                    }

                    function extractMessageFromEmailDLR(text){
                      let parser = new DOMParser();
                      let xmlDoc = parser.parseFromString(text,"text/xml");
                      let msg = null;
                      if(xmlDoc.getElementsByTagName("response").length > 0){
                        msg = xmlDoc.getElementsByTagName("response")[0].firstChild;
                      }else if(xmlDoc.getElementsByTagName("message").length > 0){
                        msg = xmlDoc.getElementsByTagName("message")[0].firstChild;
                      }
                      // .firstChild returns an object whose string content can be accessed by .data attribute.
                      return msg?msg.data:"";
                    }

                    //TODO: make it so the dropdown menu stays open if the click did not result 
                    function testRangeBoundariesAndLinkToPrintPDF(){
                      const maxPage = <%=number_of_pages%>;
                      let documentId = <%= document[:drs_file_id]%>;
                      let validateEmail = function(email) {
                        var re = /^([a-zA-Z0-9_.+-])+\@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$/;
                        return re.test(email);
                       }
                      let startRange = parseInt(document.getElementById("range_start").value);
                      let endRange = parseInt(document.getElementById("range_end").value);
                      if (isNaN(startRange) || isNaN(endRange) || (startRange < 1) ||(startRange > endRange) || (endRange > maxPage)){
                        document.getElementById("incorrect_page_range").style.display = "block";
                        return;
                      } 

                      let printUrl = 'https://iiif.lib.harvard.edu/proxy/printpdf/'+documentId;
                      let emailValue = document.getElementById('email_field').value;

                      printUrl += '?printOpt=range&start='+startRange+'&end='+endRange;
                      if((endRange - startRange >= 10)){
                        if (!emailValue){
                          document.getElementById('email_text_form').style.display = "block";
                          return;
                        }else if (!validateEmail(emailValue)){
                          document.getElementById('invalid_email_text').style.display = "block";
                          return;
                        }else{
                          let xmlhttp = null;
                          if (window.XMLHttpRequest) {// code for IE7+, Firefox, Chrome, Opera, Safari
                            xmlhttp=new XMLHttpRequest();
                          }
                          else {// code for IE6, IE5
                            xmlhttp=new ActiveXObject("Microsoft.XMLHTTP");
                          }
                          xmlhttp.onreadystatechange = function() {
                              if (xmlhttp.readyState == XMLHttpRequest.DONE) {
                                  alert(extractMessageFromEmailDLR(xmlhttp.responseText));
                              }
                          }
                          xmlhttp.open('GET',(printUrl+'&email='+emailValue),true);
                          xmlhttp.send();
                        }
                      }else{
                        window.open(printUrl, '_blank');
                      }
                      clearValuesHideText(maxPage);
                    }
                  </script>
                  <button type="button" onclick="testRangeBoundariesAndLinkToPrintPDF()"><i class="fa fa-download" aria-hidden="true"></i> Download</button>
                </div>
                <%end%>
            </div>
          <%end%>
        <%= render :partial => "bookmark_control", :locals => {:document => document } %>
        <%
        if !document[:permalink].nil? && document[:permalink].kind_of?(String) && document[:permalink] != ''
          %>
            <div class="permalink"><span class="fa fa-link"></span> &nbsp;<a href="<%=document[:permalink]%>">Permalink</a></div>
          <%
        end

        if document[:delivery_service] == 'pds' and retrieve_hasocr_info document[:drs_file_id]
          %>
            <div class="fulltext"><span class="fa"> T </span><a id="open-full-text" href="<%=full_text_href document[:drs_file_id], params[:id]%>" target="_blank"> Raw Text</a></div>
          <%
        end
        %>        
        <%
        if !document[:digital_collections_links].nil? && document[:digital_collections_links].kind_of?(Array) && document[:digital_collections_links].length > 0
          %>
            <dl class="dl-vertical dl-invert dl-appears-in clearfix">
            <dt class="blacklight-title_extended">This item appears in</dt>
          <%
          document[:digital_collections_links].each do |x|
          %>
            <dd class="blacklight-title_extended"><a href="<%=x[:url]%>"><%=x[:label]%></a></dd>
          <%
          end
          %>
            </dl>
          <%
        end
        %>

      <dl class="dl-more-details clearfix">
        <%
        if (!document[:hollis_links].nil? && document[:hollis_links].kind_of?(Array) && document[:hollis_links].length > 0)  ||
        (!document[:hollis_image_links].nil? && document[:hollis_image_links].kind_of?(Array) && document[:hollis_image_links].length > 0) ||
        (!document[:finding_aid_links].nil? && document[:finding_aid_links].kind_of?(Array) && document[:finding_aid_links].length > 0)
        %>
          <dt class="blacklight-title_extended clearfix">More item details</dt>
        <%
        end
        if !document[:hollis_links].nil? && document[:hollis_links].kind_of?(Array)
          document[:hollis_links].each do |x|
          %>
            <dd class="blacklight-title_extended"><a href="<%=x[:url]%>"><%=x[:link_text]%></a> <%=x[:label]%></dd>
          <%
          end
        end

        if !document[:hollis_image_links].nil? && document[:hollis_image_links].kind_of?(Array)
          document[:hollis_image_links].each do |x|
          %>
            <dd class="blacklight-title_extended"><a href="<%=x[:url]%>"><%=x[:link_text]%></a> <%=x[:label]%></dd>
          <%
          end
        end

        if !document[:finding_aid_links].nil? && document[:finding_aid_links].kind_of?(Array)
          document[:finding_aid_links].each do |x|
          %>
            <dd class="blacklight-title_extended"><a href="<%=x[:url]%>"><%=x[:link_text]%></a> <%=x[:label]%></dd>
          <%
          end
        end
        %>
      </dl>
      <%if document[:delivery_service] == 'ids' or document[:delivery_service] == 'pds'%>
        <dl class="dl-iiif dl-more-details clearfix">
           <%
              del_serv = document[:delivery_service]
              manifest_base_url = 'https://iiif.lib.harvard.edu/manifests/' 
              id_prefix = (del_serv == 'pds'? 'drs': del_serv) + ':'
            %>
          <dt class="blacklight-title_extended clearfix"><%= image_tag("IIIFLogoBlack.svg", alt: "IIIF") %></dt>
            <script>
              function copyManifestToClipBoard(manifest_url) {
                const el = document.createElement('textarea');
                el.value = manifest_url;
                document.body.appendChild(el);
                el.select();
                document.execCommand('copy');
                alert("Copied the text: '" + el.value + "' to clipboard");
                document.body.removeChild(el);
              }
            </script>
            <dd class="blacklight-title_extended"><a href="javascript:void(0);" onclick="copyManifestToClipBoard('<%=manifest_base_url+id_prefix+document[:drs_file_id]%>')">Copy Manifest Link</a>
            </dd>
          <%if del_serv == 'pds'%>
            <dd class="blacklight-title_extended">
              <a href="<%= manifest_base_url+'view/'+id_prefix+document[:drs_file_id]%>" target="_blank">Open in Mirador</a>
            </dd>
          <%end%>
          <dd>
            <a href="https://iiif.io/community/faq/" target="_blank">What is IIIF?</a>
          </dd>
        </dl>
      <%end%>
    </div>
    <div id="feedback" class="record-tools">
      <h2 class="clearfix">Feedback</h2>
      <p><a href="https://harvard.az1.qualtrics.com/jfe/form/SV_ahGZ04EDLTP2TPf">Tell us what you think</a></p>
    </div>
  </div>
</div>
