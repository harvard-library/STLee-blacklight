<div id='ft-maincontent'>
<%
image_metadata = retrieve_still_image_json_metadata 'https://iiif.lib.harvard.edu/manifests/drs:'+drs_id
if !image_metadata
%>  
<%= render "no_ocr" %>
<%
else
  pages = image_metadata['structures'][0]['canvases']
  #for some reason the IDs on the manifest are offset by 1 compared to the  to be sent to the FDS server in the js part. 
  pages_ids = pages.map { |s| s.match(/canvas-([0-9]*).json/)[1].to_i + 1 }

  doc_title = image_metadata['label']

%>
<div id="ft-dl-title-box">
  <div id="ft-dl-field-name">
    <h2>Full text of</h2>
  </div>
  <h4><div id="ft-dl-display-label"></div></h4>

  <button id="ft-dl-download" class="btn btn-dark" onclick="triggerFullTextDownload()">DOWNLOAD
  </button>
</div>

<div id="progress">
  <div id="bar"></div>
  <div id="loading-text" role='status'>Retrieving item metadata, please wait<div class="ft-dl-spinner-container"><div class="ft-dl-spinner"></div></div></div>
</div>

<div id="ft-dl-about-title"><h2>About Full text<span class='caret'></span></h2></div>
<div id="ft-dl-about-content">This page contains raw, uncorrected text that was automatically created through optical character recognition (OCR). For the most accurate content, access this item through the Mirador viewer or download a PDF. <br><br>Read more about the <a href='https://wiki.harvard.edu/confluence/display/DigitalImaging/Technical+resources' target="_blank">OCR technologies</a> used at Harvard Library.</div>

<hr></hr>

<div id="ft-dl-page-counter"><span id="ft-dl-curr-page">0</span> / <span id="ft-dl-total-page">0</span></div>

<div id="fulltext-zone" class="col-lg-8">

</div>

<script type="text/javascript">
  // some drs IDs to test with: 2678271 (45 pages); 6612363 (84 pages); 52666264 (120 pages); 9752507 (900 pages)
  let pages_ids = <%= raw pages_ids%>;

  const drs_id = <%= drs_id %>;
  $('#ft-dl-download').hide();
  $('#ft-dl-spinner').show();

  $(document).ready(function() {
    generateDivs(pages_ids);
    var title_div = document.getElementById("ft-dl-display-label");
    title_div.innerText = "<%= raw CGI.unescapeHTML doc_title%>";
    updatePageCounter(0, pages_ids.length);
    add_text();
  });

  $(document).scroll(function(){
    let yMiddleScreen = $(window).height()/2;
    let xMiddleScreen = $(window).width()/2; 
    let currDiv = document.elementFromPoint(xMiddleScreen, yMiddleScreen);
    if(currDiv){
      let currId = currDiv.id;
      if(currId && !isNaN(currId)){
        updatePageCounter(currDiv.id, pages_ids.length);
      }
    }
  });

  function generateDivs(page_ids){
    for (let i = 0; i < page_ids.length; i++) {
      let textZone = document.getElementById('fulltext-zone');
      let newDiv = document.createElement('div');
      newDiv.setAttribute("id", i+1);

      newDiv.setAttribute("drs_id", page_ids[i])
      textZone.appendChild(newDiv);
    }
  }

  function updateBar(currentPage, totalPage) {
    let bar = document.getElementById("bar");
    let width = (currentPage/totalPage) * 100;
    bar.style.width = width + '%';
    let loadText = document.getElementById("loading-text");
    loadText.innerText = "Loading full text ("+ String(currentPage)+" of "+String(totalPage)+" pages)"
  }

  function retrieveOCRAJAX(i, progressionIndex, page_divs) {
    $.ajax({
        url: "http://fds.lib.harvard.edu/fds/deliver/" + page_divs[i].getAttribute("drs_id"),
        success: function(data) {
          progressionIndex.idx++;
          page_divs[i].innerText = data;
          updateBar(progressionIndex.idx, page_divs.length);
          if(progressionIndex.idx == page_divs.length - 1){
            $('#ft-dl-download').show({easing: 'swing'});
            $('#progress').hide({easing: 'swing'});
          }
        },
        error: function(xhr, status, error) {
          console.log('at div : '+ String(i));
        },
        statusCode: {
          500: function() {setTimeout( function () {retrieveOCRAJAX(i, progressionIndex, page_divs);}, 5000);}
          }   
      });
  }

  function updatePageCounter(currPageNmb, totalPageNmb){
    $('#ft-dl-curr-page').text(currPageNmb);
    $('#ft-dl-total-page').text(totalPageNmb);
  }

  function add_text() {
    var page_divs = document.getElementById("fulltext-zone").children;
    // this was implemented in order to have a "pass by reference" int into 'retrieveOCRAJAX' 
    let progressionIndex = {
      idx: 0
    };
    for (let i = 0; i < page_divs.length; i++) {
      retrieveOCRAJAX(i, progressionIndex, page_divs);
    }
  }

  function triggerFullTextDownload(){
    let raw_title = "<%= raw CGI.unescapeHTML doc_title %>";
    //removing punctuation or weird char from the file title, and replace whitespaces by underscores.
    let raw_title_stripped = raw_title.replace(/[^a-z0-9 ]/gi, '').replace(/[ ]/gi, '_')

    download(raw_title_stripped + ".txt", make_text_file());
  }

  function make_text_file() {
    var text = [];
    var page_divs = document.getElementById("fulltext-zone").children;
    for (let i= 0; i < page_divs.length; i++) {
      text += page_divs[i].textContent
    }
    return text;
  } 

  function download(filename, text) {
    var element = document.createElement('a');
    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));
    element.setAttribute('download', filename);

    element.style.display = 'none';
    document.body.appendChild(element);

    element.click();

    document.body.removeChild(element);
  }
</script>
<%    
  end
%>
  
</div>